version: '3.8'
services:
  app:
    build: .
    ports:
      - "${PORT}:${PORT}"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${PORT}
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
      echo 'Waiting for PostgreSQL to become available...' &&
      until PGPASSWORD=$$POSTGRES_PASSWORD psql -h db -U $$POSTGRES_USER -d $$POSTGRES_DB -c '\\q'; do
        echo 'Postgres is unavailable - sleeping' &&
        sleep 1
      done &&
      echo 'PostgreSQL is ready! Starting application...' &&
      ./main
      "
    env_file:
      - .env

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    env_file:
      - .env

volumes:
  postgres_data: